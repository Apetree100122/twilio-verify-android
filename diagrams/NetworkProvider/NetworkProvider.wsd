@startuml

namespace Networking {
    class NetworkAdapter {
        + urlConnection: URLConnection
    }
    interface NetworkProvider {
        execute(request: Request, success: Callback, failure: Callback)
    }
    NetworkProvider <|-- NetworkAdapter : implements

    class RequestBuilder {
        - httpMethod: HttpMethod
        - url: String
        - body?: Dictionary = null
        - contentType: MediaType
        - acceptType: MediaType
        - headers: []
        - tag: String
        - userAgent: String
        - requestId: String
        - authorization: String
        + setHttpMethod(httpMethod: httpMethod): RequestBuilder
        + setUrl(url: String): RequestBuilder
        + setBody(body: Dictionary): RequestBuilder
        + setContentType(contentType: MediaType): RequestBuilder
        + setAcceptType(acceptType: MediaType): RequestBuilder
        + setHeaders(headers: []): RequestBuilder
        + setTag(tag: String): RequestBuilder
        + setUserAgent(userAgent: String): RequestBuilder
        + setRequestId(requestId: String): RequestBuilder
        + setAuthorization(authorization: String): RequestBuilder
        + build(): Request
    }

    class Request {
        - httpMethod: HttpMethod
        - url: String
        - body?: Dictionary
        - contentType: MediaType
        - acceptType: MediaType
        - headers: []
        - tag: String
        - userAgent
        - requestId
        - authorization
    }

    class RequestHelper {
        + getCommonHeaders(): headers[]
        + paramEncoder(param: String): String
    }

    RequestBuilder o--> RequestHelper : uses
    RequestBuilder o--> Request : creates

    enum HttpMethod {
        POST
        GET
        DELETE
        PUT
    }

    enum MediaType {
        URL_ENCODED
        FORM_BODY
    }
}
@enduml